@use "sass:map";
@use "sass:math";
@use "../abstracts/grid-breakpoint-newest" as variables;
$container-max-widths: (
  sm: 100%,
  md: 540px,
  lg: 720px,
  xl: 960px,
  xxl: 1140px,
);
$grid-columns: 12 !default;
$grid-gutter-width: 30px !default;
$gutters: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);

%gutter-padding {
  padding-left: calc(var(--grid-gutter-x) * 0.5);
  padding-right: calc(var(--grid-gutter-x) * 0.5);
}

.container-fluid {
  --grid-gutter-x: #{$grid-gutter-width};
  --grid-gutter-y: 0;

  width: 1370px;
  margin-left: auto;
  margin-right: auto;
  @extend %gutter-padding;
}

.container {
  @extend .container-fluid;
  max-width: 100%;
  width: 1370px;
}

.rows {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--grid-gutter-y) * -1);
  margin-left: calc(var(--grid-gutter-x) * 0.5 * -1);
  margin-right: calc(var(--grid-gutter-x) * 0.5 * -1);

  > * {
    margin-top: var(--grid-gutter-y);
    @extend %gutter-padding;
  }
}

.cols {
  flex: 1 0;
}

@mixin make-media-query($dimension) {
  @media (max-width: ($dimension - 0.02)) {
    @content;
  }
}

@mixin make-row-columns($infix: null) {
  @for $i from 1 through $grid-columns * 0.5 {
    .rows-cols#{$infix}-#{$i} > * {
      flex: 0 0 auto;
      width: math.div(100%, $i);
    }
  }
}

@mixin make-columns($infix: null) {
  @for $i from 1 through $grid-columns {
    .cols#{$infix}-#{$i} {
      flex: 0 0 auto;
      width: math.div(100%, $grid-columns) * $i;
    }
  }
}

@mixin make-offsets($infix: null) {
  @for $i from 0 to $grid-columns {
    .offset#{$infix}-#{$i} {
      margin-left: if($i > 0, math.div(100%, $grid-columns) * $i, 0);
    }
  }
}

@mixin make-gutters($infix: null) {
  @each $i, $ratio in $gutters {
    .gxy#{$infix}-#{$i},
    .g-x#{$infix}-#{$i} {
      --grid-gutter-x: #{$grid-gutter-width * $ratio};
    }

    .gxy#{$infix}-#{$i},
    .g-y#{$infix}-#{$i} {
      --grid-gutter-y: #{$grid-gutter-width * $ratio};
    }
  }
}

@include make-row-columns();

@include make-columns();

@include make-offsets();

@include make-gutters();
// xxl
@each $breakpoint, $dimension in variables.$grid-breakpoints {
  $max-width: map.get($container-max-widths, $breakpoint);
  $infix: "-#{$breakpoint}";

  @include make-media-query($dimension) {
    .container {
      max-width: $max-width;
    }

    @include make-row-columns($infix);

    @include make-columns($infix);

    @include make-offsets($infix);

    @include make-gutters($infix);
  }
}
